---
import ReservationLayout from '../../layouts/ReservationLayout.astro';
---

<ReservationLayout title="Réservation - Nombre de personnes" currentStep={1}>
  <form method="get" action="/reservation/vr-type" class="space-y-6" id="peopleForm">
    <div>
      <h2 class="text-2xl font-bold text-gray-900 mb-4">Combien de personnes ?</h2>
      <p class="text-gray-600 mb-6">Sélectionnez le nombre de participants (maximum 6 personnes)</p>
      
      <div class="grid grid-cols-3 gap-4 max-w-md mx-auto sm:max-w-none sm:grid-cols-6">
        {[1, 2, 3, 4, 5, 6].map((number) => (
          <label class="relative block">
            <input 
              type="radio" 
              name="numberOfPeople" 
              value={number} 
              class="peer sr-only" 
              required
              checked={number === 1}
            />
            <div class="h-24 flex items-center justify-center rounded-lg border-2 border-gray-300 bg-white text-center cursor-pointer peer-checked:border-blue-500 peer-checked:bg-blue-50 transition-all">
              <span class="text-xl font-medium">{number}</span>
            </div>
          </label>
        ))}
      </div>
    </div>
    
    <div class="pt-4 flex justify-end">
      <button
        type="submit"
        class="py-2.5 px-5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors w-full sm:w-auto"
      >
        Continuer →
      </button>
    </div>
  </form>
</ReservationLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Sélectionner le formulaire
    const peopleForm = document.getElementById('peopleForm');
    
    // Récupérer les boutons radio
    const radioButtons = document.querySelectorAll('input[name="numberOfPeople"]');
    
    // Ajouter un gestionnaire d'événement change à chaque bouton radio
    radioButtons.forEach(radio => {
      radio.addEventListener('change', () => {
        if (radio instanceof HTMLInputElement && radio.checked) {
          // Stocker la valeur dans sessionStorage
          sessionStorage.setItem('reservation_numberOfPeople', radio.value);
          console.log('Nombre de personnes sauvegardé:', radio.value);
        }
      });
    });
    
    // Vérifier s'il y a une valeur sauvegardée
    const savedValue = sessionStorage.getItem('reservation_numberOfPeople');
    if (savedValue) {
      // Sélectionner le bouton radio correspondant
      const radioToSelect = document.querySelector(`input[name="numberOfPeople"][value="${savedValue}"]`);
      if (radioToSelect instanceof HTMLInputElement) {
        radioToSelect.checked = true;
      }
    }
    
    // Ajouter un gestionnaire d'événement pour la soumission du formulaire
    if (peopleForm instanceof HTMLFormElement) {
      peopleForm.addEventListener('submit', (e) => {
        // Récupérer la valeur sélectionnée
        const selectedRadio = document.querySelector('input[name="numberOfPeople"]:checked');
        if (selectedRadio instanceof HTMLInputElement) {
          // Stocker la valeur dans sessionStorage
          sessionStorage.setItem('reservation_numberOfPeople', selectedRadio.value);
          console.log('Formulaire soumis avec nombre de personnes:', selectedRadio.value);
        }
      });
    }
  });
</script>

<script>
  // Enhance radio button UX
  document.addEventListener('DOMContentLoaded', () => {
    const radioLabels = document.querySelectorAll('input[name="numberOfPeople"]');
    radioLabels.forEach(radio => {
      radio.addEventListener('change', () => {
        // Store selection in sessionStorage for multi-step form
        if (radio instanceof HTMLInputElement && radio.checked) {
          sessionStorage.setItem('reservation_numberOfPeople', radio.value);
        }
      });
    });
  });
</script>
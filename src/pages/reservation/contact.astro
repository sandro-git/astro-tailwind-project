---
import ReservationLayout from "../../layouts/ReservationLayout.astro";
import { format } from "date-fns";
import { fr } from "date-fns/locale";
// Get query parameters from previous steps
const numberOfPeople = await Astro.session.get("numberOfPeople");
const vrType = await Astro.session.get("vrType");
const duration = await Astro.session.get("duration");
const selectedDate = await Astro.session.get("date");
const selectedTime = await Astro.session.get("time");
---

<ReservationLayout title="Réservation - Vos coordonnées" currentStep={6}>
  <form class="space-y-6">
    <!-- Pass along the previous steps' data -->
    <input type="hidden" name="numberOfPeople" value={numberOfPeople} />
    <input type="hidden" name="vrType" value={vrType} />
    <input type="hidden" name="duration" value={duration} />
    <input type="hidden" name="selectedDate" value={selectedDate} />
    <input type="hidden" name="selectedTime" value={selectedTime} />

    <div>
      <h2 class="text-2xl font-bold text-gray-900 mb-4">Vos coordonnées</h2>
      <p class="text-gray-600 mb-6">
        Merci de renseigner vos informations de contact
      </p>

      <div
        class="bg-blue-50 border-l-4 border-blue-500 p-4 mb-6"
        id="reservation-info"
      >
        <div class="flex">
          <div class="flex-shrink-0">
            <svg
              class="h-5 w-5 text-blue-500"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
                clip-rule="evenodd"></path>
            </svg>
          </div>
          <div class="ml-3">
            <p class="text-sm text-blue-700">
              Votre réservation : <span
                class="font-medium"
                id="numPeopleDisplay"
                >{numberOfPeople} personne{
                  numberOfPeople && parseInt(numberOfPeople) > 1 ? "s" : ""
                }</span
              > •
              <span class="font-medium" id="vrTypeDisplay">{vrType}</span> •
              <span class="font-medium" id="durationDisplay"
                >{duration} minutes</span
              > •
              <span class="font-medium" id="dateTimeDisplay"
                >{format(selectedDate, "EEEE d MMMM", { locale: fr })}</span
              >
            </p>
          </div>
        </div>
      </div>

      <div class="space-y-4">
        <div>
          <label
            for="fullName"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Nom et prénom *
          </label>
          <input
            type="text"
            id="fullName"
            name="fullName"
            required
            class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-base"
            placeholder="Votre nom complet"
            autocomplete="name"
          />
        </div>

        <div>
          <label
            for="email"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Email *
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-base"
            placeholder="votre@email.com"
            autocomplete="email"
          />
        </div>

        <div>
          <label
            for="phoneNumber"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Numéro de téléphone *
          </label>
          <input
            type="tel"
            id="phoneNumber"
            name="phoneNumber"
            required
            pattern="[0-9]{10}"
            class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-base"
            placeholder="0612345678"
            autocomplete="tel"
            inputmode="numeric"
          />
          <p class="mt-1 text-xs text-gray-500">
            Format: 10 chiffres sans espaces
          </p>
        </div>
      </div>
    </div>

    <div
      class="pt-4 flex flex-col sm:flex-row gap-3 sm:gap-0 sm:justify-between"
    >
      <a
        href={`/reservation/time?numberOfPeople=${numberOfPeople}&vrType=${vrType}&duration=${duration}`}
        class="py-2.5 px-5 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors text-center"
      >
        ← Retour
      </a>
      <button
        type="submit"
        class="py-2.5 px-5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors"
      >
        Continuer →
      </button>
    </div>
  </form>
</ReservationLayout>

<script>
  import { actions } from "astro:actions";
  import { navigate } from "astro:transitions/client";
  // DOM elements
  // Handle form data persistence
  document.addEventListener("DOMContentLoaded", function () {
    // Ajouter un gestionnaire pour le submit du formulaire
    const form = document.querySelector("form");
    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      const formData = new FormData(form);
      const { error } = await actions.contact(formData);
      if (!error) navigate("/reservation/confirmation");
    });
  });
</script>

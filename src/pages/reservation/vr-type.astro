---
import ReservationLayout from "../../layouts/ReservationLayout.astro";

// This is server-side Astro code
const numberOfPeople = await Astro.session.get("numberOfPeople");

const showOnlyVR = numberOfPeople > 4;
---

<ReservationLayout title="Réservation - Type de VR" currentStep={2}>
  <form class="space-y-6" id="vrTypeForm">
    <!-- Pass along the previous step's data -->
    <input type="hidden" name="numberOfPeople" value={numberOfPeople} />

    <div>
      <h2 class="text-2xl font-bold text-gray-900 mb-4">
        Choisissez votre type de VR
      </h2>
      <p class="text-gray-600">Pour {numberOfPeople} personnes</p>
      {
        showOnlyVR ? (
          <p class="text-amber-600 mb-6">
            Pour {numberOfPeople} personnes, seule l'option VR standard est
            disponible.
          </p>
        ) : (
          <p class="text-gray-600 mb-6">
            Sélectionnez le type de réalité virtuelle que vous souhaitez
            utiliser
          </p>
        )
      }

      <div
        class={`grid grid-cols-1 ${!showOnlyVR ? "sm:grid-cols-2" : ""} gap-6 max-w-lg mx-auto sm:max-w-none`}
      >
        {/* Option VR Standard - toujours affichée */}
        <label class="relative block">
          <input
            type="radio"
            name="typeOfVr"
            value="VR"
            class="peer sr-only"
            required
            checked
          />
          <div
            class="h-40 flex flex-col items-center justify-center rounded-lg border-2 border-gray-300 bg-white p-4 text-center cursor-pointer peer-checked:border-blue-500 peer-checked:bg-blue-50 transition-all"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-12 w-12 text-gray-700 mb-2"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
              ></path>
            </svg>
            <span class="text-lg font-medium">VR Standard</span>
            <span class="text-sm text-gray-500 mt-1"
              >Casque VR filaire avec contrôleurs</span
            >
            {
              showOnlyVR && (
                <span class="text-xs text-amber-500 mt-2">
                  Seule option disponible pour {numberOfPeople} personnes
                </span>
              )
            }
          </div>
        </label>

        {
          /* Option VR Sans Fil - n'est PAS rendue du tout dans le DOM si showOnlyVR est true */
        }
        {
          !showOnlyVR && (
            <label class="relative block" id="wirelessVROption">
              <input
                type="radio"
                name="typeOfVr"
                value="VR Sans Fil"
                class="peer sr-only"
              />
              <div class="h-40 flex flex-col items-center justify-center rounded-lg border-2 border-gray-300 bg-white p-4 text-center cursor-pointer peer-checked:border-blue-500 peer-checked:bg-blue-50 transition-all">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-12 w-12 text-gray-700 mb-2"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                  />
                </svg>
                <span class="text-lg font-medium">VR Sans Fil</span>
                <span class="text-sm text-gray-500 mt-1">
                  Casque VR sans fil avec contrôleurs
                </span>
                <span class="text-xs text-gray-500 mt-1">
                  (4 personnes maximum)
                </span>
              </div>
            </label>
          )
        }
      </div>
    </div>

    <div
      class="pt-4 flex flex-col sm:flex-row gap-3 sm:gap-0 sm:justify-between"
    >
      <a
        href="/reservation"
        class="py-2.5 px-5 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors text-center"
      >
        ← Retour
      </a>
      <button
        type="submit"
        class="py-2.5 px-5 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors"
      >
        Continuer →
      </button>
    </div>
  </form>
</ReservationLayout>

<script>
  import { actions } from "astro:actions";
  import { navigate } from "astro:transitions/client";

  // This script handles the form submission and retrieves the selected number of people

  const form = document.querySelector("form");
  form.addEventListener("submit", async (event) => {
    event.preventDefault();
    const formData = new FormData(form);
    const { error } = await actions.typeOfVr(formData);
    if (!error) navigate("/reservation/duration");
  });
</script>

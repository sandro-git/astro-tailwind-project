---
interface Props {
  currentStep: number;
}

const { currentStep } = Astro.props;

const steps = [
  { id: 1, name: 'Personnes' },
  { id: 2, name: 'Type VR' },
  { id: 3, name: 'Durée' },
  { id: 4, name: 'Date' },
  { id: 5, name: 'Horaires' },
  { id: 6, name: 'Coordonnées' },
  { id: 7, name: 'Résumé' },
  { id: 8, name: 'Confirmation' }
];
---

<div class="py-6">
  <div class="max-w-4xl mx-auto px-4">
    <!-- Version mobile : Ne montrer que l'étape actuelle et les étapes adjacentes sur les petits écrans -->
    <nav aria-label="Progress" class="md:hidden">
      <div class="text-center mb-4">
        <span class="text-sm text-gray-500">Étape {currentStep} sur {steps.length}</span>
      </div>
      <ol role="list" class="flex items-center justify-center">
        {steps.map((step, stepIdx) => {
          // Sur mobile, n'afficher que l'étape actuelle, l'étape précédente et la suivante
          const shouldShow = step.id === currentStep || step.id === currentStep - 1 || step.id === currentStep + 1;
          if (!shouldShow) return null;
          
          return (
            <li class={`relative ${stepIdx !== steps.length - 1 && shouldShow ? 'pr-4' : ''}`}>
              <div class="flex items-center">
                <div class={`flex flex-col items-center ${step.id === currentStep ? 'text-blue-600' : step.id < currentStep ? 'text-green-600' : 'text-gray-400'}`}>
                  <span class={`h-8 w-8 flex items-center justify-center rounded-full ${step.id === currentStep ? 'bg-blue-100 border-2 border-blue-600' : step.id < currentStep ? 'bg-green-100 border-2 border-green-600' : 'bg-gray-100 border-2 border-gray-400'}`}>
                    {step.id < currentStep ? (
                      <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                        <path fill-rule="evenodd" d="M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z" clip-rule="evenodd" />
                      </svg>
                    ) : (
                      <span class="text-sm font-medium">{step.id}</span>
                    )}
                  </span>
                  <span class="text-xs font-medium mt-1">{step.name}</span>
                </div>
                {stepIdx !== steps.length - 1 && shouldShow && (
                  <div class={`w-6 h-0.5 ${step.id < currentStep ? 'bg-green-600' : 'bg-gray-300'}`}></div>
                )}
              </div>
            </li>
          );
        })}
      </ol>
    </nav>
    
    <!-- Version desktop : Afficher toutes les étapes sur les écrans plus grands -->
    <nav aria-label="Progress" class="hidden md:block">
      <ol role="list" class="flex items-center">
        {steps.map((step, stepIdx) => (
          <li class={`relative ${stepIdx !== steps.length - 1 ? 'pr-8 sm:pr-20' : ''}`}>
            <div class="flex items-center">
              <div class={`flex flex-col items-center ${step.id === currentStep ? 'text-blue-600' : step.id < currentStep ? 'text-green-600' : 'text-gray-400'}`}>
                <span class={`h-8 w-8 flex items-center justify-center rounded-full ${step.id === currentStep ? 'bg-blue-100 border-2 border-blue-600' : step.id < currentStep ? 'bg-green-100 border-2 border-green-600' : 'bg-gray-100 border-2 border-gray-400'}`}>
                  {step.id < currentStep ? (
                    <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                      <path fill-rule="evenodd" d="M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z" clip-rule="evenodd" />
                    </svg>
                  ) : (
                    <span class="text-sm font-medium">{step.id}</span>
                  )}
                </span>
                <span class="text-xs font-medium mt-1">{step.name}</span>
              </div>
              {stepIdx !== steps.length - 1 && (
                <div class={`flex-1 h-0.5 ${step.id < currentStep ? 'bg-green-600' : 'bg-gray-300'}`} style="min-width: 2rem;"></div>
              )}
            </div>
          </li>
        ))}
      </ol>
    </nav>
  </div>
</div>